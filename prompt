#!/usr/bin/env perl

use 5.18.2;
use strict;
use warnings;
use utf8;
use Encode;
use Text::CharWidth qw(mbswidth);
use Getopt::Long;

my $encoding = `locale charmap`;
my $date;
my $pwd = decode($encoding, $ENV{"PWD"});
my $home = decode($encoding, $ENV{"HOME"});
my $dateFormat;
my $columns;

binmode(STDOUT, ":encoding($encoding)");

$columns = 80;

GetOptions (
    'columns=i' => \$columns,
    'date-fmt=s' => \$dateFormat
);

if (defined $dateFormat) {
    $date = `date "+$dateFormat"`;
} else {
    $date = `date`
}
$date = decode ($encoding, $date);
$date =~ s/\s*$//g; # `date` normaly ends with a "\n"
$date =~ s/^(\w)/\u$1/;
$pwd =~ s/^$home/~/;
my $space = $columns - mbswidth($date) - mbswidth($pwd);

# ANSI terminal colors:
my $black	= "\e[30m";
my $red		= "\e[31m";
my $green	= "\e[32m";
my $yellow	= "\e[33m";
my $blue	= "\e[34m";
my $magenta	= "\e[35m";
my $cyan	= "\e[35m";
my $white	= "\e[35m";
my $normal	= "\e[0m";

if ( $space > 0 ) {
	print $green, $pwd, (" " x $space), $red, $date, $normal, "\n";
} elsif ( mbswidth($pwd) <= $columns ) {
	print $green, $pwd, $normal, "\n";
} else {
    while (mbswidth($pwd) >= $columns) {
        $pwd =~ s/^\X//;
    }
    print $green, "â€¦", $pwd, $normal, "\n";
}
