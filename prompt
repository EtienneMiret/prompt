#!/usr/bin/env perl

use 5.18.2;
use strict;
use warnings;
use utf8;
use Encode;
use Text::CharWidth qw(mbswidth);
use Getopt::Long;
use Pod::Usage;

my $encoding = `locale charmap`;
my $date;
my $pwd = decode($encoding, $ENV{"PWD"});
my $home = decode($encoding, $ENV{"HOME"});
my $dateFormat;
my $columns;
my $help = 0;
our $VERSION = "1.1.0-snapshot";

binmode(STDOUT, ":encoding($encoding)");

$columns = 80;

Getopt::Long::Configure(
    "auto_version",
    "require_order",
    "no_ignore_case",
    "no_getopt_compat"
);
GetOptions (
    'help' => \$help,
    'columns=i' => \$columns,
    'date-fmt=s' => \$dateFormat
) or pod2usage (2);
pod2usage (-verbose => 2) if $help;

if (defined $dateFormat) {
    $date = `date "+$dateFormat"`;
} else {
    $date = `date`;
}
$date = decode ($encoding, $date);
$date =~ s/\s*$//g; # `date` normaly ends with a "\n"
$date =~ s/^(\w)/\u$1/;
$pwd =~ s/^$home/~/;
my $space = $columns - mbswidth($date) - mbswidth($pwd);

# ANSI terminal colors:
my $black	= "\e[30m";
my $red		= "\e[31m";
my $green	= "\e[32m";
my $yellow	= "\e[33m";
my $blue	= "\e[34m";
my $magenta	= "\e[35m";
my $cyan	= "\e[35m";
my $white	= "\e[35m";
my $normal	= "\e[0m";

if ( $space > 0 ) {
	print $green, $pwd, (" " x $space), $red, $date, $normal, "\n";
} elsif ( mbswidth($pwd) <= $columns ) {
	print $green, $pwd, $normal, "\n";
} else {
    while (mbswidth($pwd) >= $columns) {
        $pwd =~ s/^\X//;
    }
    print $green, "…", $pwd, $normal, "\n";
}

__END__

=encoding UTF-8

=head1 NAME

prompt - pretty shell prompt

=head1 SYNOPSIS

prompt [options]

 Options:
   --help               full documentation
   --columns NUM        column width of the terminal
   --date-fmt STRING    date format

=head1 OPTIONS

=over

=item B<--help>

Print the manual page and exits.

=item B<--columns NUM>

Set the number of columns to output. Should be your terminal’s width.

=item B<--date-fmt STRING>

Specify how to format the date. It must be a valid output format for the
B<date> command, without the leading '+'.

=back

=head1 DESCRIPTION

B<prompt> will allow you to display the full path of your working directory
on a separate line, just above the shell’s prompt. This mean you can have
a short prompt, while having the working directory printed.

If there is enough place, B<prompt> will also display the current date after
the working directory.

If there is not enough place to display the working directory on one line,
B<prompt> will only display the end of it.
